#cloud-config

# This is the user-data configuration file for cloud-init. By default this sets
# up an initial user called "ubuntu" with password "ubuntu", which must be
# changed at first login. However, many additional actions can be initiated on
# first boot from this file. The cloud-init documentation has more details:
#
# https://cloudinit.readthedocs.io/
#
# Please note that the YAML format employed by this file is sensitive to
# differences in whitespace; if you are editing this file in an editor (like
# Notepad) which uses literal tabs, take care to only use spaces for
# indentation. See the following link for more details:
#
# https://en.wikipedia.org/wiki/YAML
#
# Some additional examples are provided in comments below the default
# configuration.

# On first boot, set the (default) ubuntu user's password to "ubuntu" and
# expire user passwords
chpasswd:
  expire: true
  list:
  - ubuntu:ubuntu

## Set the system's hostname. Please note that, unless you have a local DNS
## setup where the hostname is derived from DHCP requests (as with dnsmasq),
## setting the hostname here will not make the machine reachable by this name.
## You may also wish to install avahi-daemon (see the "packages:" key below)
## to make your machine reachable by the .local domain
#hostname: ubuntu

## Set up the keyboard layout. See localectl(1), in particular the various
## list-x11-* sub-commands, to determine the available models, layouts,
## variants, and options
#keyboard:
#  model: pc105
#  layout: gb
#  variant:
#  options: ctrl:nocaps

# Enable password authentication with the SSH daemon
ssh_pwauth: true

## On first boot, use ssh-import-id to give the specific users SSH access to
## the default user
#ssh_import_id:
#- lp:my_launchpad_username
#- gh:my_github_username

## Add users and groups to the system, and import keys with the ssh-import-id
## utility
#groups:
#- robot: [robot]
#- robotics: [robot]
#- pi
#
#users:
#- default
#- name: robot
#  gecos: Mr. Robot
#  primary_group: robot
#  groups: users
#  ssh_import_id: foobar
#  lock_passwd: false
#  passwd: $5$hkui88$nvZgIle31cNpryjRfO9uArF7DYiBcWEnjqq7L1AQNN3

## Update apt database and upgrade packages on first boot
package_update: true
package_upgrade: true

## Install additional packages on first boot
packages:
- docker.io
- docker-compose
- nftables
- linux-modules-extra-raspi
#- rng-tools
#- python3-gpiozero
#- [python3-serial, 3.5-1]

## Write arbitrary files to the file-system (including binaries!)
#write_files:
- path: /spr-install.sh
  encodigin: gzip
  owner: root:root
  permissions: '0644'
  content: !!binary |
	H4sIADN7sGIAA51WbU/jRhD+fP4Vw2KVu55sk/tQ3dGmUgrhGokDlISeVEKjjXcSu9hra3cNBMh/76xfEodAK1VIyPM+Oy/PZH8vmMUymHEdOU48h2twrwYnsNeFQ7j5GUyE0nmnC5GBe+i8w4fYOPPYcTCMMmDXH28gltrwJInlAgTmKAXKMEbt+z5znH04vxj3IcyKRABPFHKxhBk2RihgtoQwyQpBrNhAzsNbvljLHZ4bb4EGilxwg2vSWzYaILLwFpUfZ/WXF2ZpnmkEOTd8lqAGSq148NJMFER5+GAU9xTXeWzTE7G2WqBQZ8kdCkcvtcE0NMlaVHGE94qKNlm+K1cpBGjCoGL4YSbndb0kT1GjukMFHb/8Y/DrrnIrrzivXzHPVP3C2tfTRAJMWKMwYUcw54nGiVytnVYGgeCYZtL/W2ey3bk5qUS2b6PLYdMu+gSNpsid9FbECoIoSzHQuXJC0SIW1Ctqm0SIjMn1URAQJypmlH9qFTyJ5j5TtzrQRY6lcfVBIewT4wXcx49cEdtwZTREqNAKFyhRUauBBjIOa13thDl4Q8vDgGqdJ6QxrWVrHWd/fHFy4RxfnJ8Ovk5PB2f9LqtlQWlZEb6OmNO7Gv/+mgovTDQtqEW6rBZz9rfcaU6xkbgt+x0TZ3DaO+5PT/qnvauzcZfdJ1x2WM393jvfSNBEh8wZjQYnG94YtTnjM1Y3igoJDKhY8xhCWy87B1Tga/dpK8zq5giYY/cLSn61yt4juCW5WeWS7LpbxpuNrsMVuTbkK4V7LmnTDKo5DxHWQVuveBnYyl4Et6wXCVhW191xViaiCRW8GJgOysoMzsf9YZm0/+NLTp3PKlgwcFudeqV4WsfCPqBd7Vbulr1J21KbjC3VdduGr+V53vu2SbEkqmD/kRwXaSwJ97Smfanay/MYrptF2KR42RuNvl8MW2k2nE2qDafrvjcKPBHCtOf96XHv0Tv0vsAvEAi8CwrFpchSeKa1I8de6D51jrzPqw/lu65G/SGNtc2LtVJ9mjD3ycpWEwZHYKkmGnFKzHHXa7H9RpQllvEwRK3BZNSMCH4ooaN8bCbbk3K9RL15df+899tZf3p1ORoP+71vzvr1zH0hYnADz88kfEXS7QIjt2xTqfoyNTeJMM+eIoFzXiSGZh4anKnxhY7gut9/7Teep1SPPwbH/dG0CmkH4E1ZZ2cSkPB6y/G/+X076K5j20enPNbtPpRYW6LHVolH495wXBeWuSXF7A8AJrNWwaq78bFyYq8G+amuxjs/aEBUh4oOkg5oegmfFYoozKdLniaEujQgjZplB43cX6bJWz6ijMLlYtva7nPQSMqD+Yb1PacDJzIL+dC2r9nrj/rqkhdVyGmucFbEiSGrso6Dywqt3sc0rUKo54XCHJhY0jWnE9XCRFqCZqU69MXvb+HgKVcEoOB+Wh0Qy7b6QAeTgPoZLA4+WOd0cnecL5JsxpPG9//wu187Zp0vn/zOT599+t/cFGqioNO9x9Zkki1o4mkN7UrSMae45aNXQHDU5pHLFdCgUMEkhoai0jbXONe4o/Oh7XzUaEFY0UIK5vwDCAUz63EKAAA=

#  content: |
#    git clone https://github.com/spr-networks/super
#    cd super
#    cp -R base/template_configs configs
#    sed -i 's/wlan1/wlan0/g' configs/base/config.sh
#    sed -i 's/WANIF=wlan0/WANIF=eth0/g' configs/base/config.sh
#    echo "{\"admin\" : \"sprchangeme\"}" > configs/base/auth_users.json
#    ./configs/scripts/gen_coredhcp_yaml.sh > configs/dhcp/coredhcp.yml
#    ./configs/scripts/gen_hostapd.sh > configs/wifi/hostapd.conf
#    ./configs/scripts/gen_watchdog.sh  > configs/watchdog/watchdog.conf
#    sudo ./run_prebuilt.sh
#  permissions: '0755'
#  owner: ubuntu:ubuntu
#- encoding: gzip
#  path: /root/Makefile
#  content: !!binary |
#    H4sICF2DTWIAA01ha2VmaWxlAFNWCM8syVBILMjPyU/PTC1WKMlXiPB2dlFQNjSx5MpNteLi
#    dLDiSoRQxYl5KeWZyRkgXrSCkoqKRmaKgm6pppKCbmqhgoFCrIKamkK1QmpyRr6Ckn92YqWS
#    NdC80uQMBZhOa4VahZoaqIrwjMQSewXfxOxUhcwShcr80qLi1Jw0RSUuAIYfEJmVAAAA
#  owner: root:root
#  permissions: '0644'

## Run arbitrary commands at rc.local like time
#runcmd:
#- [ ls, -l, / ]
#- [ sh, -xc, "echo $(date) ': hello world!'" ]
#- [ wget, "http://ubuntu.com", -O, /run/mydir/index.html ]
